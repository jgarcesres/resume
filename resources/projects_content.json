{
  "projects":
    {
      "public": [
        {
          
          "title": "resume",
          "description": "this resume is defined in github and deployed through github actions to a static site hosted on my homelab. The resume is built using React and Tailwind CSS, and the content is managed through JSON files.",
          "githubUrl": "https://github.com/jgarcesres/resume",
          "technologies": ["GitHub Actions", "Docker", "traefik2", "React", "Tailwind CSS", "JSON"],
          "features": [
            "Static site deployment",
            "Responsive design",
            "Content management through JSON",
            "Leverages CI/CD (github actions) for automated lint, build, test and deploy",
            "Dockerized for easy deployment"
          ]
        },
        {
          "title": "git2jamf",
          "description": "A github action that synchronizes Git repositories with Jamf Pro, streamlining the deployment of scripts and configurations and allowing for version control missing in JAMF.",
          "githubUrl": "https://github.com/jgarcesres/git2jamf",
          "technologies": ["Python", "Docker", "CI/CD", "Automation"],
          "features": [
            "Automated synchronization between Git repositories and Jamf Pro",
            "Git triggers for real-time updates",
            "Comprehensive logging and error handling",
            "Docker containerization for easy deployment"
          ]
        }
      ]
    },
    "work": [
      {
        "title": "Metrics and Monitoring",
        "description": "Implemented Grafana's mimir along with grafana itself on AWS EKS for metrics storage and monitoring, enhancing observability and creating a centralized dashboard for all cluster and services. I secured the remote write endpoints using auth2proxy allowing for m2m authentication with the prometheus clients and getting us off mainting whitelists and security groups",	
        "technologies": ["AWS", "EKS", "kubernetes", "Grafana", "Monitoring"],
        "features": [
          "Centralized metrics dashboard",
          "Enhanced observability",
          "Real-time monitoring",
          "Scalable architecture",
          "oauth2proxy Machine to machine authentication"
        ]
      },
      {
        "title": "Custom Metrics Exporter",
        "description": "Wrote a custom metric's exporter for Scuba's services to expose metrics that were not natively generated  by the application. This allows for better monitoring and alerting on critical application metrics.",
        "technologies": ["python", "fastapi", "Grafana", "Prometheus", "Monitoring"],
        "features": [
          "Custom metrics collection",
          "Prometheus compatible exporter",
          "Lightweight fastapi endpoint that generates metrics on scrape",
          "Alerting on critical application metrics"
        ]
      },
      {
        "title":"OSS Inventory - SnipeIT",
        "description": "Implemented the first inventory system for Sonos's IT assets, including hardware and software, using SnipeIT. This system allows for better tracking and management of IT resources, ensuring compliance and optimizing asset utilization. Offered it as a service to other teams in the org.",
        "technologies": ["terraform", "ECS", "jamf", "intune", "sccm", "SnipeIT", "Inventory Management", "Asset Tracking"],
        "features": [
          "Centralized asset management",
          "Integrated with existing systems (jamf, intune, sccm) to automatically add and track assets",
          "Automated inventory updates"
        ]
      },
      {
        "title": "Incident Management for IT",
        "description": "Created a workflow through the use of aws lambda, python and the API's of the various services we used (pagerduty, jira, confluence, slack) to create an Incident Mangement system for IT that handled the entire lifecycle of an incident from creation to resolution. This system allowed for better tracking and management of incidents, improving response times and reducing downtime.", 
        "technologies": ["python", "aws", "lambda", "pagerduty", "jira", "confluence", "slack"],
        "features": [
          "Automated incident lifecycle management",
          "Integration with existing tools (pagerduty, jira, confluence, slack)",
          "Improved response times and reduced downtime"
        ]
      }


    ]
    
}

